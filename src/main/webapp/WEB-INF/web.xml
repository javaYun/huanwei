<?xml version="1.0" encoding="UTF-8"?>

<web-app xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
                      http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
    version="3.0">
   <welcome-file-list>
        <welcome-file>index.html</welcome-file>
    </welcome-file-list>

    <listener>
        <description>Spring监听器</description>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <!-- ContextLoaderListener初始化Spring上下文时需要使用到的contextConfigLocation参数 -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <!-- 配置spring.xml和spring-mybatis.xml这两个配置文件的位置，固定写法 -->
        <param-value>classpath:spring.xml,classpath:spring-mybatis.xml</param-value>
    </context-param>
    
<servlet-mapping>  
<servlet-name>default</servlet-name >           
<url-pattern>*.js</url-pattern>        
</servlet-mapping> 
<servlet-mapping>  
<servlet-name>default </servlet-name >           
<url-pattern>*.gif</url-pattern>        
</servlet-mapping>  
<servlet-mapping> 
<servlet-name>default </servlet-name>           
<url-pattern>*.jpg</url-pattern>        
</servlet-mapping>  
<servlet-mapping>  
<servlet-name>default</servlet-name>           
<url-pattern>*.png</url-pattern>        
</servlet-mapping >  
<servlet-mapping>
      <servlet-name>default </servlet-name >             
<url-pattern>*.css</url-pattern>         
</servlet-mapping>
     <!-- springMVC核心配置 -->
    <servlet>
        <servlet-name>dispatcherServlet</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <!--spingMVC的配置路径 -->
            <param-value>classpath:spring-mvc.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <session-config>
    <session-timeout>86400000</session-timeout>
    </session-config>
   
    <!-- 拦截设置 -->
    <servlet-mapping>
        <servlet-name>dispatcherServlet</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>
     <filter>  
        <description>encodingFilter</description>  
        <filter-name>encodingFilter</filter-name>
        <filter-class>  
          org.springframework.web.filter.CharacterEncodingFilter  
        </filter-class>  
        <init-param>  
            <description>encodingFilter</description>  
            <param-name>encoding</param-name>  
            <param-value>UTF-8</param-value>  
        </init-param>  
    </filter>  
    <filter-mapping>  
        <filter-name>encodingFilter</filter-name>  
        <url-pattern>/*</url-pattern>  
    </filter-mapping>  
    <!-- log4j -->
    <context-param>  
        <param-name>isLog4jAutoInitializationDisabled</param-name>  
        <param-value>false</param-value>  
    </context-param>  
    <!-- 默认就会找这个文件，不需要额外配置引用   -->
    <context-param>  
        <param-name>log4jConfiguration</param-name>  
        <param-value>classpath:log4j2.xml</param-value>  
    </context-param>  
  <context-param> 
   <param-name>rootLevel</param-name> 
   <param-value>DEBUG</param-value> 
 </context-param> 

 <context-param> 
   <param-name>loggingLevel</param-name> 
   <param-value>INFO</param-value> 
 </context-param> 
    <listener>  
        <listener-class>org.apache.logging.log4j.web.Log4jServletContextListener</listener-class>  
    </listener>  
   
    <filter>  
        <filter-name>log4jServletFilter</filter-name>  
        <filter-class>org.apache.logging.log4j.web.Log4jServletFilter</filter-class>  
    </filter>  
    <filter-mapping>  
        <filter-name>log4jServletFilter</filter-name>  
        <url-pattern>/*</url-pattern>  
        <dispatcher>REQUEST</dispatcher>  
        <dispatcher>FORWARD</dispatcher>  
        <dispatcher>INCLUDE</dispatcher>  
        <dispatcher>ERROR</dispatcher>  
    </filter-mapping>
    

<listener>  
        <listener-class>com.sczh.platform.listener.SessionListener</listener-class>          
</listener>   
   <listener>  
        <listener-class>com.yunlao.uti.timerl.ContextListener</listener-class>    
</listener> 
        <filter>  
  <filter-name>  
    DisableUrlSessionFilter  
  </filter-name>  
  <filter-class>  
   com.sczh.platform.filter.DisableUrlSessionFilter  
  </filter-class>  
</filter>  
  
<filter-mapping>  
  <filter-name>DisableUrlSessionFilter</filter-name>  
  <url-pattern>/*</url-pattern>  
</filter-mapping> 
    
</web-app>